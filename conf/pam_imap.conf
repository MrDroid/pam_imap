###############################################################################
###			PAM_IMAP Configuration file
###############################################################################
#  Note that this file contains configuration options
#  for both isync, and pam_imap.
#  Since isync is made to synch two remote IMAP boxes
#  There are many options that should *not* be used
#  in the pam module!  (pam_imap uses isync
#  to login to the server)
#  All settings for the module begin with "PAM_"

##############################
##PAM_PasswordString
##
# This setting will set the display for the password prompt
#  IE:   PAM_PasswordString = Password:
#  Note that I havn't setup my parser to use quotes -- it
#  is delimited by newline.  If you want a space after
#  the colon ':' just press <space> and <enter>
#  in order for the string to be parsed correctly
PAM_PasswordString = Password: 

###############################
##CertificateFile
##
# This is the location of the cert key.  If you have
# a self-signed key, this might cause problems
# but, has not been thoroughly tested.
# OpenSSL comes with a key that seems to work
# fine, which is what this is set to right now.
#  Note that this line is parsed by isync,
# and does *not* use an = sign.
######
#  Note2:  Make sure this file is READABLE by
#  the UID that is executing the PAM APPLICATION
#  EX:  if you run check_user as user 'bob', and bob
#  cannot read the cert file, then pam_imap will fail.
#  Bottom line, change this to mode 644.

CertificateFile /usr/share/ssl/certs/imapd.pem

##################################
##PAM_ServerX
##
# This is the definition of which servers to use
# The syntax is pretty simple, in the format of
#   [imaps:]hostname:port
#  If "imaps:" is prepended to the hostname:port
#  string, SSL/TLS is used for the imap connection
#  (FYI:  imaps is port 993, imap is 143)
#
# If a server cannot be connected to, the next
# host will be used.  If a login FAILS,
# the module will exit with an auth error
# and will *not* try any successive servers.

#SECURITY note:  If this is to be used on a production system
#	you may want to use IP addresses instead of hostnames
#	Using hostnames may open opportunities for DNS hacking
#  Examples:
#PAM_Server0 = imaps:localhost:6969
#PAM_Server1 = imaps:127.0.0.1:993
#PAM_Server2 = localhost:143

PAM_Server0 = imaps:localhost:993


#############################
##PAM_Domain
##
#  If your Micro$oft IMAP server requires a username in the format of
#  username@mydomain.com, set PAM_Domain to 'mydomain.com'
#  to have '@mydomain.com' concatenated to the end of the username.
#  The UNIX-style login will still be 'username', but
#  the string sent to the server will be in the 
#  format username@mydomain.com
#
#  If your IMAP server does not use this format, 
#  leave this line commented out!
#PAM_Domain = mydomain.com

###################################
##PAM_BlockList
##
#  Specify comma separated usernames that pam-imap will not test against
#  any IMAP server.  Useful for usernames like "root" or "Administrator"
#  Very nice feature if the IMAP server is not your own, and several
#  root attempts may cause a few questions to shoot your way...
#
#  Also, please keep the syntax very similar to what the example is here
#   (My parser isn't very intelligent)
#
#  EX:   PAM_BlockList = root, admin, Administrator, apache

PAM_BlockList = root, admin, Administrator, apache

############################
##PAM_HashEnable
##
#  IMAP is slow and crappy... especially when used for authentication.
#  When used with apache or other pipelined auth systems, its possible
#  for one action to require 10 or more authentications.  IMAP usually
#  takes around 5 sec to auth, which can really drag things down.
#
#  This is a simple implementation of a user/pass caching table
#  implemented with GDBM as a hash.  Passwords are stored
#  with the crypt() library and have an expiration time, specified
#  below.  Here, set PAM_HashEnable to either "yes" or "no"
#  (technically, anything other than "yes" means no... much like
#  the standards of communicating with women.  ;-)
#
#  Make sure to read security warnings below

# example:
# PAM_HashEnable = yes

PAM_HashEnable = no

#########################
##PAM_HashFile
##
#  This is the filename, in full relative path, of what the database
#  file will be called.  The file will have permissions 0600
#  and be owned by the *first* person that runs pam_imap
#  in hashing mode.
#
#  WARNING:  If you run PAM aware applications that do not run
#  as root, you will need to allow read and write access to the users
#  that run the application.  Although the password are encrypted with MD5,
#  there could be an abundant number of attacks in this situation.
#  Read the README file for more info

PAM_HashFile = /etc/pam_imap.gdbm

###########################
##PAM_HashDelta
##
#  Time in seconds that passwords are fresh.  After this time,
#  passwords are considered stale, and the IMAP server is quereied
#  for the password success/fail.  If the password succeeds
#  it is added to the database.
#
#  20 or 30 seconds is sufficient for use with "burst" authentiation
#  applications like Apache and WebDAV.  Larger values, anywhere
#  between several minutes, to a day or so could be usefull
#  for heavy traffic servers.

PAM_HashDelta = 20


###############################################################################
#  Don't use the rest of this, unless you'd like to force some
#  strange behavior into the module for testing
#  These options are used deep down in the isync library
#  Setting these will cause *unexpected* results
###############################################################################
#Host	imaps:localhost
#Port 993
#RequireSSL yes


#Port	143
#Box	INBOX
# don't download messages larger than 200K bytes
#MaxSize	200000

###
### work mailbox
###

#Mailbox /home/me/Mail/work
#Host	work.host.com
#Pass	xxxxxxxx
# define a shortcut so I can just use "isync work" from the command line
#Alias	work
# don't auto expunge messages in this box (overridden by -e on command line)
#Expunge no

###
### personal mailbox
###

#Mailbox /home/me/Mail/personal
#Host host.play.com
# use a non-default port for this connection
#Port 6789
#Alias personal


###
### Remote mailbox over a SSH tunnel
###

#Mailbox /home/me/Mail/remote
#Host localhost
#Tunnel "ssh -l cal -q localhost /usr/sbin/imapd"
