# Process this file with autoconf to produce a configure script.
AC_INIT(pam_imap, 0.3.6, calzplace@users.sf.net)
AC_CONFIG_SRCDIR([check_user.c])
AC_CONFIG_HEADER(config.h)
#AM_INIT_AUTOMAKE

# Checks for programs.
AC_PROG_INSTALL
AC_PROG_MAKE_SET

AC_PROG_CC_STDC
if test "$GCC" = yes; then
	CFLAGS="$CFLAGS -pipe -Wall -Dlinux -DLINUX_PAM"
	#CFLAGS="-pipe -Wall -Dlinux -DLINUX_PAM"
	AC_CHECK_FILE(./isynclib, [CPPFLAGS="$CPPFLAGS -I./isynclib"])
	LDFLAGS="$LDFLAGS -L/lib -Xlinker -x -shared"
fi

AC_CHECK_FUNCS(getopt_long)

# Checks for libraries.
AC_CHECK_LIB(crypto, ERR_error_string, [LIBS="$LIBS -lcrypto"])
AC_CHECK_LIB(crypt, crypt, [LIBS="$LIBS -lcrypt"])
# FIXME: Replace `main' with a function in `-ldb':
AC_CHECK_LIB(db, dbm_open, [AC_DEFINE(HAVE_LIBDB, 1, [Define if you have libdb])])
AC_CHECK_LIB(gdbm, gdbm_open, [LIBS="$LIBS -lgdbm"
	AC_DEFINE(HAVE_LIBGDBM, 1, [Define if you have libgdbm]) ])
AC_CHECK_LIB(socket, socket)
AC_CHECK_LIB(nsl, inet_ntoa)
# FIXME: Replace `main' with a function in `-lpam':
AC_CHECK_LIB(pam, pam_sm_authenticate, [LIBS="$LIBS -lpam"])
# FIXME: Replace `main' with a function in `-lpam_misc':
AC_CHECK_LIB([pam_misc], [main], [LIBS="$LIBS -lpam_misc"])
AC_CHECK_LIB(ssl, SSL_library_init, [LIBS="$LIBS -lssl"
		AC_DEFINE(HAVE_LIBSSL, 1, [Define for OpenSSL]) ])
# FIXME: Replace `main' with a function in `-lz':
AC_CHECK_LIB([z], [main])

#AC_CACHE_CHECK(for dbm_open, ac_cv_dbmopen,
#        [ac_cv_dbmopen=no
#        AC_TRY_LINK([#include <ndbm.h>],
#                [dbm_open(0,0,0);],[ac_cv_dbmopen=yes])])
#if test $ac_cv_dbmopen = no; then
#        AC_CACHE_CHECK([for dbm_open in -ldb], ac_cv_libdb,
#                [save_LIBS="$LIBS"
#                LIBS="$LIBS -ldb"
#                ac_cv_libdb=no
#                AC_TRY_LINK([#define DB_DBM_HSEARCH 1
##include <db.h>],
#                        [dbm_open(0,0,0);],
#                        [ac_cv_libdb=yes])
#                LIBS="$save_LIBS"])
#
#        if test $ac_cv_libdb = yes; then
#                LIBS="$LIBS -ldb"
#                AC_DEFINE(HAVE_LIBDB, 1, [Define if you have libdb])
#        else
#                AC_MSG_ERROR([Could not find dbm_open(), you must install libdb]
#)
#        fi
#fi


debug=no
AC_ARG_WITH(debug, [  --with-debug=yes	yes/no [no]],
	[ob_cv_with_debug=$withval])
if test "x$ob_cv_with_debug" == xyes; then
	echo "Defining DEBUG..."
	AC_DEFINE(DEBUG, 1, [Turn on Debugging Mode])
	CFLAGS="$CFLAGS -g"
else
	echo "DEBUG Not defined"
fi

# Checks for header files.
AC_FUNC_ALLOCA
AC_HEADER_STDC
AC_CHECK_HEADERS([arpa/inet.h fcntl.h limits.h netdb.h netinet/in.h stdlib.h string.h sys/socket.h sys/time.h syslog.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME

# Checks for library functions.
AC_FUNC_FORK
AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_FUNC_MMAP
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([dup2 crypt gethostbyname getpass gettimeofday inet_ntoa memmove memset munmap socket strcasecmp strchr strdup strerror strncasecmp strstr strtol])



AC_CONFIG_FILES([Makefile
                 isynclib/Makefile])
AC_OUTPUT
